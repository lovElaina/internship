<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.UserMapper">

    <resultMap type="User" id="UserResult">
        <result property="userId"       column="user_id"       />
        <result property="roleId"    column="role_id"    />
        <result property="deptId"    column="dept_id"    />
        <result property="avatar"    column="avatar"    />
        <result property="userName"     column="user_name"     />
        <result property="password"  column="password"  />
        <result property="email"  column="email"  />
        <result property="phone"  column="phone"  />
        <result property="status"  column="status"  />
        <result property="delFlag"  column="del_flag"  />
        <result property="loginIp"  column="login_ip"  />
        <result property="loginDate"    column="login_date"   />
        <association property="dept"    column="dept_id" javaType="SysDept" resultMap="deptResult" />
        <collection  property="roles"   javaType="java.util.List"           resultMap="RoleResult" />
    </resultMap>

    <resultMap id="deptResult" type="SysDept">
        <id     property="deptId"    column="dept_id"     />
        <result property="parentId"  column="parent_id"   />
        <result property="deptName"  column="dept_name"   />
        <result property="ancestors" column="ancestors"   />
        <result property="orderNum"  column="order_num"   />
        <result property="leader"    column="leader"      />
        <result property="status"    column="dept_status" />
    </resultMap>

    <resultMap id="RoleResult" type="SysRole">
        <id     property="roleId"       column="role_id"        />
        <result property="roleName"     column="role_name"      />
        <result property="roleKey"      column="role_key"       />
        <result property="roleSort"     column="role_sort"      />
        <result property="dataScope"     column="data_scope"    />
        <result property="status"       column="role_status"    />
    </resultMap>



    <sql id="selectUserVo">
        select u.user_id, u.role_id, u.dept_id, u.user_name, u.email, u.avatar, u.phone, u.password, u.status, u.del_flag, u.login_ip, u.login_date,
               d.dept_id, d.parent_id, d.ancestors, d.dept_name, d.order_num, d.leader, d.status as dept_status,
               r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.status as role_status
        from user u
                 left join sys_dept d on u.dept_id = d.dept_id
                 left join sys_role r on r.role_id = u.role_id
    </sql>

    <select id="selectUserList" parameterType="User" resultMap="UserResult">
        select u.user_id, u.role_id, u.dept_id, u.user_name, u.email, u.avatar, u.phone, u.password, u.status, u.del_flag, u.login_ip, u.login_date,
               d.dept_id, d.parent_id, d.ancestors, d.dept_name, d.order_num, d.leader, d.status as dept_status,
               r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.status as role_status
        from user u
                 left join sys_dept d on u.dept_id = d.dept_id
                 left join sys_role r on r.role_id = u.role_id
        where u.del_flag = '0'
        <if test="deptId != null and deptId != 0">
            AND (u.dept_id = #{deptId} OR u.dept_id IN ( SELECT t.dept_id FROM sys_dept t WHERE find_in_set(#{deptId}, ancestors) ))
        </if>
    </select>


    <select id="selectStudentList" parameterType="User" resultMap="UserResult">
        select u.user_id, u.role_id, u.dept_id, u.user_name, u.email, u.avatar, u.phone, u.password, u.status, u.del_flag, u.login_ip, u.login_date,
        d.dept_id, d.parent_id, d.ancestors, d.dept_name, d.order_num, d.leader, d.status as dept_status,
        r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.status as role_status
        from user u
        left join sys_dept d on u.dept_id = d.dept_id
        left join sys_role r on r.role_id = u.role_id
        where u.del_flag = '0' and u.role_id = '4'
        <if test="deptId != null and deptId != 0">
            AND (u.dept_id = #{deptId} OR u.dept_id IN ( SELECT t.dept_id FROM sys_dept t WHERE find_in_set(#{deptId}, ancestors) ))
        </if>
    </select>

    <select id="selectUserByUserName" parameterType="String" resultMap="UserResult">
        select u.user_id, u.role_id, u.dept_id, u.user_name, u.email, u.avatar, u.phone, u.password, u.status, u.del_flag, u.login_ip, u.login_date,
               d.dept_id, d.parent_id, d.ancestors, d.dept_name, d.order_num, d.leader, d.status as dept_status,
               r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.status as role_status
        from user u
                 left join sys_dept d on u.dept_id = d.dept_id
                 left join sys_role r on r.role_id = u.role_id
        where user_name = #{userName} and u.del_flag = '0'
    </select>


    <select id="selectUserById" parameterType="Long" resultMap="UserResult">
        select u.user_id, u.role_id, u.dept_id, u.user_name, u.email, u.avatar, u.phone, u.password, u.status, u.del_flag, u.login_ip, u.login_date,
               d.dept_id, d.parent_id, d.ancestors, d.dept_name, d.order_num, d.leader, d.status as dept_status,
               r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.status as role_status
        from user u
                 left join sys_dept d on u.dept_id = d.dept_id
                 left join sys_role r on r.role_id = u.role_id
        where user_id = #{userId}
    </select>


    <select id="checkUserNameUnique" parameterType="String" resultMap="UserResult">
        select user_id, user_name from user where user_name = #{userName} and del_flag = '0' limit 1
    </select>


    <select id="checkPhoneUnique" parameterType="String" resultMap="UserResult">
        select user_id, phone from user where phone = #{phone} and del_flag = '0' limit 1
    </select>


    <select id="checkEmailUnique" parameterType="String" resultMap="UserResult">
        select user_id, email from user where email = #{email} and del_flag = '0' limit 1
    </select>

    <select id="countUserRoleByRoleId" resultType="Integer">
        select count(1) from user where role_id=#{roleId}
    </select>

    <select id="countUser" resultType="Integer">
        select count(1) from user
    </select>


    <insert id="insertUser" parameterType="User" useGeneratedKeys="true" keyProperty="userId">
        insert into user(

        <if test="userId != null and userId != 0">user_id,</if>
        <if test="roleId != null and roleId != 0">role_id,</if>
        <if test="deptId != null and deptId != 0">dept_id,</if>
        <if test="avatar != null and avatar != ''">avatar,</if>
        <if test="userName != null and userName != ''">user_name,</if>
        <if test="password != null and password != ''">password,</if>
        <if test="email != null and email != ''">email,</if>
        <if test="phone != null and phone != ''">phone,</if>
        <if test="status != null and status != ''">status,</if>
        <if test="delFlag != null and delFlag != ''">del_flag,</if>
        <if test="loginIp != null and loginIp != ''">login_ip,</if>
        login_date
        )values(
        <if test="userId != null and userId != 0">#{userId},</if>
        <if test="roleId != null and roleId != 0">#{roleId},</if>
        <if test="deptId != null and deptId != 0">#{deptId},</if>
        <if test="avatar != null and avatar != ''">#{avatar},</if>
        <if test="userName != null and userName != ''">#{userName},</if>
        <if test="password != null and password != ''">#{password},</if>
        <if test="email != null and email != ''">#{email},</if>
        <if test="phone != null and phone != ''">#{phone},</if>
        <if test="status != null and status != ''">#{status},</if>
        <if test="delFlag != null and delFlag != ''">#{delFlag},</if>
        <if test="loginIp != null and loginIp != ''">#{loginIp},</if>
        sysdate()
        )

    </insert>


    <update id="updateUser" parameterType="User">
        update user
        <set>
            <if test="userId != null and userId != 0">user_id = #{userId},</if>
            <if test="roleId != null and roleId != 0">role_id = #{roleId},</if>
            <if test="deptId != null and deptId != 0">dept_id = #{deptId},</if>
            <if test="avatar != null and avatar != ''">avatar = #{avatar},</if>
            <if test="userName != null and userName != ''">user_name = #{userName},</if>
            <if test="password != null and password != ''">password = #{password},</if>
            <if test="email != null and email != ''">email = #{email},</if>
            <if test="phone != null and phone != ''">phone = #{phone},</if>
            <if test="status != null and status != ''">status = #{status},</if>
            <if test="delFlag != null and delFlag != ''">del_flag = #{delFlag},</if>
            <if test="loginIp != null and loginIp != ''">login_ip = #{loginIp},</if>
            <if test="loginDate != null">login_date = #{loginDate},</if>
        </set>
        where user_id = #{userId}
    </update>


    <update id="updateUserAvatar" parameterType="User">
        update user set avatar = #{avatar} where user_name = #{userName}
    </update>

    <update id="resetUserPwd" parameterType="User">
        update user set password = #{password} where user_name = #{userName}
    </update>

    <delete id="deleteUserById" parameterType="Long">
        update user set del_flag = '2' where user_id = #{userId}
    </delete>

    <delete id="deleteUserByIds" parameterType="Long">
        update user set del_flag = '2' where user_id in
        <foreach collection="array" item="userId" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </delete>
</mapper>